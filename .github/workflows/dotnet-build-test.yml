name: Lint, Build and Test .NET

on:
  workflow_call:
    inputs:
      lint:
        type: boolean
        default: true
      dotnet:
        type: string
        required: false
      test-filter:
        description: 'Filter expression for dotnet test (e.g., "Category!=Integration)")'
        type: string
        default: ''
      add-private-nuget:
        type: boolean
        default: false

jobs:
  Build-Test:
    runs-on: ubuntu-latest
    outputs:
      coverage-artifact: coverage
      pack-artifact: package
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        if: ${{ inputs.dotnet != '' }}
        with:
          dotnet-version: ${{ inputs.dotnet }}

      - name: Add private NuGet feeds
        if: ${{ inputs.add-private-nuget }}
        run: |
          dotnet nuget add source https://nuget.devexpress.com/${{ secrets.DEVEXPRESS_NUGET_FEED }}/api/v3/index.json \
          -n devexpress \
          -u DevExpress \
          -p ${{ secrets.DEVEXPRESS_NUGET_TOKEN }} \
          --store-password-in-clear-text
          dotnet nuget add source ${{ vars.AZURE_ARTIFACTS_FEED_URL }} \
          -n ww \
          -u ${{ vars.AZURE_ARTIFACTS_FEED_USER }} \
          -p ${{ secrets.AZURE_DEVOPS_TOKEN }} \
          --store-password-in-clear-text

      - name: Run Lint
        if: github.event_name == 'pull_request' && inputs.lint == true
        id: lint-check
        uses: wearerequired/lint-action@v2
        with:
          auto_fix: false
          dotnet_format: true
          check_name: "Lint using ${linter}"
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build solution
        run: dotnet build --configuration Release

      - name: Test projects
        run: |
          dotnet test \
            --configuration Release \
            --no-build \
            --no-restore \
            --collect:"XPlat Code Coverage" \
            --logger trx \
            --results-directory coverage \
            --${{ inputs.test-filter && format('--filter "{0}"', inputs.test-filter) || '' }}

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage

      - name: Package
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        run: |
          dotnet pack --no-build --no-restore \
            -p:IncludeSymbols=true -p:SymbolPackageFormat=snupkg \
            /p:DebugType=portable /property:Configuration=Release
        
      - name: Upload package artifact
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        uses: actions/upload-artifact@v4
        with:
          name: package
          path: |
            ./**/*.nupkg
            ./**/*.snupkg
