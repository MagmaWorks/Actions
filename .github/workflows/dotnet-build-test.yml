name: Lint, Build and Test .NET

on:
  workflow_call:
    inputs:
      lint:
        type: boolean
        default: true
      dotnet:
        type: string
        required: false

jobs:
  Build-Test:
    runs-on: ubuntu-latest
    outputs:
      coverage-artifact: coverage
      
    steps:
      # -------------------------------
      # Checkout & setup
      # -------------------------------
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        if: ${{ inputs.dotnet != '' }}
        with:
          dotnet-version: ${{ inputs.dotnet }}

      - name: Cache NuGet packages
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      # -------------------------------
      # Run Lint
      # -------------------------------
      - name: Run Lint and push fixes
        if: github.event_name == 'pull_request' && inputs.lint == true
        id: lint-check
        uses: wearerequired/lint-action@v2
        with:
          auto_fix: true
          dotnet_format: true
          github_token: ${{ secrets.GITHUB_TOKEN }}

      # -------------------------------
      # Build & Test
      # -------------------------------
      - name: Build solution
        run: dotnet build ${{ inputs.solution-path }} --configuration Release

      - name: Test projects
        run: |
          dotnet test ${{ inputs.solution-path }} \
            --configuration Release \
            --no-build \
            --no-restore \
            --collect:"XPlat Code Coverage" \
            --logger trx \
            --results-directory coverage

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage
