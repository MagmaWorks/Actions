name: On Release -- Push NuGet

on:
  workflow_call:
    inputs:
      codecov:
        description: 'Upload code coverage to codecov.io'
        type: boolean
        default: true
        required: false
  
      dotnet:
        description: 'Setup a specific dotnet version'
        type: string
        required: false

jobs:
  tag_new_version:
    name: Tag version
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Strip Build from Tag version
      run: |
        # Get the tag from GitHub event
        tag=${{ github.event.release.tag_name }}
        echo $tag

        # Split the tag into major, minor, patch, and build versions
        IFS='.' read -r -a fullVersion <<< "$tag"
        majorVersion=${fullVersion[0]}
        minorVersion=${fullVersion[1]}
        patchVersion=${fullVersion[2]}
        buildVersion=${fullVersion[3]}

        # Create and push new Major.Minor.Patch git tag
        git tag "$majorVersion.$minorVersion.$patchVersion"
        git push origin "$majorVersion.$minorVersion.$patchVersion"
  
  build_test_package:
    name: Build, test, re-package, update release and push nuget
    runs-on: ubuntu-latest
    needs: tag_new_version
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        filter: tree:0

    - name: Setup dotnet
      if: "${{ inputs.dotnet != '' }}"
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ inputs.dotnet }}

    - name: Build
      run: dotnet build --configuration Release
    
    - name: Test
      run: dotnet test --configuration Release --no-build --verbosity normal --collect:"XPlat Code Coverage" --logger trx --results-directory coverage
      
    - name: Upload coverage reports to workflow as artifacts
      uses: actions/upload-artifact@v4
      with:
        name: coverage-reports
        path: coverage
    
    - name: Package
      run: dotnet pack --configuration Release --no-restore -p:IncludeSymbols=true -p:SymbolPackageFormat=snupkg /p:DebugType=portable /property:Configuration=Debug

    - name: Update release
      uses: ncipollo/release-action@v1
      with:
        artifacts: "./**/*.*nupkg"
        tag: ${{ github.event.release.tag_name }}
        draft: false
        makeLatest: true
        allowUpdates: true
        removeArtifacts: true
        updateOnlyUnreleased: false

    - name: Push nupkg file to nuget.org
      run: dotnet nuget push "./**/*.nupkg" -s https://api.nuget.org/v3/index.json -k ${{ SECRETS.NUGET_API_KEY }}

    - name: Delete previous draft releases
      uses: hugo19941994/delete-draft-releases@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  codecov-upload:
    name: Upload coverage reports to codecov.io
    if: inputs.codecov == true
    needs: build_test_package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
          
      - name: Download coverage reports from workflow artifacts
        uses: actions/download-artifact@v4
        with:
          name: coverage-reports
          path: coverage

      - name: Upload coverage reports to codecov.io
        uses: codecov/codecov-action@v5
        with:
          fail_ci_if_error: true
          directory: coverage
